swagger: "2.0"
info:
  description: This is documentation for REST api of metodology_model servise.
  version: "1.5.0"
  title: REST servise for metodology_model
consumes:
  - application/json
  - multipart/form-dat
produces:
  - application/json

basePath: /api_admin

paths:
  /predict:
      post:
        operationId: interface.rest_api.predict
        tags:
          - predict
        summary: Calculate predict based on user ans.
        description: Calculate predict based on user ans.
        parameters:
          - name: answers
            in: body
            required: true
            schema:
              $ref: '#/definitions/predict_query'

        responses:
          200:
            description: Prediction successfully made.
            schema:
              $ref: '#/definitions/prediction_result'

  /upload:
      put:
        operationId: interface.rest_api.upload_table
        tags:
          - upload
        summary: Upload Table in DB.
        parameters:
          - name: upfile
            in: formData
            type: file
            description: example.xlsx
            required: True

          - name: table_name
            in: query
            description: uploding table name (Коэффициенты/Описание)
            type: string
            required: True

        responses:
          200:
            description: Upload successfully made.

  /fit:
    put:
      operationId: interface.rest_api.fit
      tags:
        - fit
      summary: Upload Table in DB.
      parameters:
        - name: upfile
          in: formData
          type: file
          description: example.xlsx
          required: True

        - name: out_name
          in: query
          description: target column name
          default: 'out_val'
          type: string
          required: True

      responses:
        200:
          description: Upload successfully made.

definitions:
  predict_query:
      type: array
      items:
        type: integer
      description: answers on metodology question.
      example: [1, 0, 1]
  prediction_result:
      type: object
      required:
        - success
        - person_profile
        - descriptions
      properties:
        success:
          type: boolean
          description: Status of api call.
          example: True

        person_profile:
          type: integer
          description: person definition vec
          example: [35, 25, 46, 89]

        descriptions:
          type: object
          description: List of profile descriptions
          example: ['description1', 'description2', 'description3', 'description4']

        issues:
          type: object
          description: List of issues for well. Shows if prediction is unsucessful
          example: [35, 25, 46, 89]